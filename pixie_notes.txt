firefly todo 
120 firefly.py; they each pick a random goal and fly toward it (thus testing the brain) and then pick another.
130 add collisions to fireflys detect fireflies that collide and change their color
140 now we want fireflies to be larger or smaller, brighter or dimmer depending on how close they are to the "camera"
5 impulse, get a vector, scale to max acc, trim acc to max speed, fly toward it
6 when you are about io reach it, pck a new goal. "about to" is "as close as max speed"

Need a 
self.max_speed -> float
self.max_acc -> float
self.goal -> vector 

1 100 flies
2 random psoition in 3 space
3 each one needs to pick a goal 100 away
4 max acc scaled to get you 100 in 3 sec

Brain
if goal is None: pick a goal; return
if goal is "close" goal = None; return
get a vector toward the goal
scale that vector to self.max_acc
if I add that trial acc to my trial velocity, will it be too much? Subtract that from my acc
Make that my proposed acc

close enough

To inherit world, we have to use the construct 
class Pixie(World):
	def __init__(self,whatever):
		World.__init__(self,whatever)
		#whatever else you want to do it the init
		super().__init__... would be the equivelent of the other call; like, if you don't know the name... ;-)
		super(). is also useful if you want to get at stuff you've overridden. So self.brain() is the brain of the firefly but super().brain is the brain of the parent. 
2019-10-14
self.goal_distance = 100
self.goal_close = 10
self.max_speed = 10
self.max_acc = 20
firefly (what about pixies)
def brain(self):
  if self.goal is None:
    self.goal = self.pick_a_goal()
    return
  if self.is_too_close():
    self.goal = None
    return
  # get a vector to the goal
  # reduce the length to max_acc
  # trial add to the trial velocity
  # if the trial velocity > max_speed, cut back on acc
 # make your trial acc this acc

Check the physics to make sure it doesn't break this. 